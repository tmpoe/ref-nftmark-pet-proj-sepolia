// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NftCatAttributesCreated extends ethereum.Event {
  get params(): NftCatAttributesCreated__Params {
    return new NftCatAttributesCreated__Params(this);
  }
}

export class NftCatAttributesCreated__Params {
  _event: NftCatAttributesCreated;

  constructor(event: NftCatAttributesCreated) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get requester(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get breed(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get eyecolor(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get playfulness(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get cuteness(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class NftCatAttributesRequested extends ethereum.Event {
  get params(): NftCatAttributesRequested__Params {
    return new NftCatAttributesRequested__Params(this);
  }
}

export class NftCatAttributesRequested__Params {
  _event: NftCatAttributesRequested;

  constructor(event: NftCatAttributesRequested) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get requester(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NftCatAttributes extends ethereum.SmartContract {
  static bind(address: Address): NftCatAttributes {
    return new NftCatAttributes("NftCatAttributes", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestCatAttributes(owner: Address): BigInt {
    let result = super.call(
      "requestCatAttributes",
      "requestCatAttributes(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );

    return result[0].toBigInt();
  }

  try_requestCatAttributes(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "requestCatAttributes",
      "requestCatAttributes(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  s_requestIdToSender(param0: BigInt): Address {
    let result = super.call(
      "s_requestIdToSender",
      "s_requestIdToSender(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_s_requestIdToSender(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "s_requestIdToSender",
      "s_requestIdToSender(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get vrfCoordinatorV2(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subscriptionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get gasLane(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get callbackGasLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RawFulfillRandomWordsCall extends ethereum.Call {
  get inputs(): RawFulfillRandomWordsCall__Inputs {
    return new RawFulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomWordsCall__Outputs {
    return new RawFulfillRandomWordsCall__Outputs(this);
  }
}

export class RawFulfillRandomWordsCall__Inputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get randomWords(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RawFulfillRandomWordsCall__Outputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestCatAttributesCall extends ethereum.Call {
  get inputs(): RequestCatAttributesCall__Inputs {
    return new RequestCatAttributesCall__Inputs(this);
  }

  get outputs(): RequestCatAttributesCall__Outputs {
    return new RequestCatAttributesCall__Outputs(this);
  }
}

export class RequestCatAttributesCall__Inputs {
  _call: RequestCatAttributesCall;

  constructor(call: RequestCatAttributesCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RequestCatAttributesCall__Outputs {
  _call: RequestCatAttributesCall;

  constructor(call: RequestCatAttributesCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
