// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NftListed extends ethereum.Event {
  get params(): NftListed__Params {
    return new NftListed__Params(this);
  }
}

export class NftListed__Params {
  _event: NftListed;

  constructor(event: NftListed) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class NftListingCancelled extends ethereum.Event {
  get params(): NftListingCancelled__Params {
    return new NftListingCancelled__Params(this);
  }
}

export class NftListingCancelled__Params {
  _event: NftListingCancelled;

  constructor(event: NftListingCancelled) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ierc721TokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NftListingUpdated extends ethereum.Event {
  get params(): NftListingUpdated__Params {
    return new NftListingUpdated__Params(this);
  }
}

export class NftListingUpdated__Params {
  _event: NftListingUpdated;

  constructor(event: NftListingUpdated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class NftMinted extends ethereum.Event {
  get params(): NftMinted__Params {
    return new NftMinted__Params(this);
  }
}

export class NftMinted__Params {
  _event: NftMinted;

  constructor(event: NftMinted) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class NftRequested extends ethereum.Event {
  get params(): NftRequested__Params {
    return new NftRequested__Params(this);
  }
}

export class NftRequested__Params {
  _event: NftRequested;

  constructor(event: NftRequested) {
    this._event = event;
  }

  get requester(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NftSold extends ethereum.Event {
  get params(): NftSold__Params {
    return new NftSold__Params(this);
  }
}

export class NftSold__Params {
  _event: NftSold;

  constructor(event: NftSold) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NftMarketplace extends ethereum.SmartContract {
  static bind(address: Address): NftMarketplace {
    return new NftMarketplace("NftMarketplace", address);
  }

  getBalance(): BigInt {
    let result = super.call("getBalance", "getBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBalance", "getBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMintingFee(): BigInt {
    let result = super.call("getMintingFee", "getMintingFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMintingFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMintingFee",
      "getMintingFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  s_requestIdToSender(param0: BigInt): Address {
    let result = super.call(
      "s_requestIdToSender",
      "s_requestIdToSender(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_s_requestIdToSender(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "s_requestIdToSender",
      "s_requestIdToSender(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get nftContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mintingFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyNftCall extends ethereum.Call {
  get inputs(): BuyNftCall__Inputs {
    return new BuyNftCall__Inputs(this);
  }

  get outputs(): BuyNftCall__Outputs {
    return new BuyNftCall__Outputs(this);
  }
}

export class BuyNftCall__Inputs {
  _call: BuyNftCall;

  constructor(call: BuyNftCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class BuyNftCall__Outputs {
  _call: BuyNftCall;

  constructor(call: BuyNftCall) {
    this._call = call;
  }
}

export class CancelListingCall extends ethereum.Call {
  get inputs(): CancelListingCall__Inputs {
    return new CancelListingCall__Inputs(this);
  }

  get outputs(): CancelListingCall__Outputs {
    return new CancelListingCall__Outputs(this);
  }
}

export class CancelListingCall__Inputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CancelListingCall__Outputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }
}

export class GatekeepCall extends ethereum.Call {
  get inputs(): GatekeepCall__Inputs {
    return new GatekeepCall__Inputs(this);
  }

  get outputs(): GatekeepCall__Outputs {
    return new GatekeepCall__Outputs(this);
  }
}

export class GatekeepCall__Inputs {
  _call: GatekeepCall;

  constructor(call: GatekeepCall) {
    this._call = call;
  }
}

export class GatekeepCall__Outputs {
  _call: GatekeepCall;

  constructor(call: GatekeepCall) {
    this._call = call;
  }
}

export class ListNftCall extends ethereum.Call {
  get inputs(): ListNftCall__Inputs {
    return new ListNftCall__Inputs(this);
  }

  get outputs(): ListNftCall__Outputs {
    return new ListNftCall__Outputs(this);
  }
}

export class ListNftCall__Inputs {
  _call: ListNftCall;

  constructor(call: ListNftCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ListNftCall__Outputs {
  _call: ListNftCall;

  constructor(call: ListNftCall) {
    this._call = call;
  }
}

export class MintNftCall extends ethereum.Call {
  get inputs(): MintNftCall__Inputs {
    return new MintNftCall__Inputs(this);
  }

  get outputs(): MintNftCall__Outputs {
    return new MintNftCall__Outputs(this);
  }
}

export class MintNftCall__Inputs {
  _call: MintNftCall;

  constructor(call: MintNftCall) {
    this._call = call;
  }

  get ipfsHash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MintNftCall__Outputs {
  _call: MintNftCall;

  constructor(call: MintNftCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMintingFeeCall extends ethereum.Call {
  get inputs(): SetMintingFeeCall__Inputs {
    return new SetMintingFeeCall__Inputs(this);
  }

  get outputs(): SetMintingFeeCall__Outputs {
    return new SetMintingFeeCall__Outputs(this);
  }
}

export class SetMintingFeeCall__Inputs {
  _call: SetMintingFeeCall;

  constructor(call: SetMintingFeeCall) {
    this._call = call;
  }

  get newMintingFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMintingFeeCall__Outputs {
  _call: SetMintingFeeCall;

  constructor(call: SetMintingFeeCall) {
    this._call = call;
  }
}

export class TapTreasuryCall extends ethereum.Call {
  get inputs(): TapTreasuryCall__Inputs {
    return new TapTreasuryCall__Inputs(this);
  }

  get outputs(): TapTreasuryCall__Outputs {
    return new TapTreasuryCall__Outputs(this);
  }
}

export class TapTreasuryCall__Inputs {
  _call: TapTreasuryCall;

  constructor(call: TapTreasuryCall) {
    this._call = call;
  }

  get tapAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TapTreasuryCall__Outputs {
  _call: TapTreasuryCall;

  constructor(call: TapTreasuryCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateListingCall extends ethereum.Call {
  get inputs(): UpdateListingCall__Inputs {
    return new UpdateListingCall__Inputs(this);
  }

  get outputs(): UpdateListingCall__Outputs {
    return new UpdateListingCall__Outputs(this);
  }
}

export class UpdateListingCall__Inputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ierc721TokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateListingCall__Outputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }
}

export class WithdrawProceedingsCall extends ethereum.Call {
  get inputs(): WithdrawProceedingsCall__Inputs {
    return new WithdrawProceedingsCall__Inputs(this);
  }

  get outputs(): WithdrawProceedingsCall__Outputs {
    return new WithdrawProceedingsCall__Outputs(this);
  }
}

export class WithdrawProceedingsCall__Inputs {
  _call: WithdrawProceedingsCall;

  constructor(call: WithdrawProceedingsCall) {
    this._call = call;
  }
}

export class WithdrawProceedingsCall__Outputs {
  _call: WithdrawProceedingsCall;

  constructor(call: WithdrawProceedingsCall) {
    this._call = call;
  }
}
